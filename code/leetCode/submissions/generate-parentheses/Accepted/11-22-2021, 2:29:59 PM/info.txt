{"id":590914403,"lang":"java","time":"1Â month","timestamp":1637571599,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/590914403/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"40.6 MB","code":"class Solution {\n    public List<String> generateParenthesis(int n) {\n        List<String> output = new ArrayList<>();\n        backtrack(output, \"\", 0, 0, n);\n        return output;\n    }\n    \n    public void backtrack(List<String> output, String current, int open, int close, int max ){\n        if(current.length() == 2 * max){\n            output.add(current);\n            return;\n        }\n        \n        if(open < max) backtrack(output, current + \"(\", open +1, close, max);\n        if(close < open) backtrack(output, current + \")\", open, close +1, max);\n    }\n}","compare_result":"11111111","title_slug":"generate-parentheses"}