{"id":586446578,"lang":"java","time":"1 month, 1 week","timestamp":1636801110,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/586446578/","is_pending":"Not Pending","title":"Binary Search Tree to Greater Sum Tree","memory":"36.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public static List<Integer> list = new ArrayList<>();\n\n    public void convert(TreeNode root) {\n        if (root != null) {\n            convert(root.right);\n            int inOrderNodeIndex = list.indexOf(root.val);\n            int inOrderValue = 0;\n            if (inOrderNodeIndex + 1 < list.size()) {\n                inOrderValue = list.get(inOrderNodeIndex + 1);\n                list.add(inOrderNodeIndex, root.val + inOrderValue);\n            }\n            root.val += inOrderValue;\n            convert(root.left);\n        }\n    }\n    \n    public void inOrder(TreeNode root) {\n        if (root != null) {\n            inOrder(root.left);\n            list.add(root.val);\n            inOrder(root.right);\n        }\n    }\n\n\n    public TreeNode bstToGst(TreeNode root) {\n        inOrder(root);\n        convert(root);\n        list.clear();\n        return root;\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"binary-search-tree-to-greater-sum-tree"}