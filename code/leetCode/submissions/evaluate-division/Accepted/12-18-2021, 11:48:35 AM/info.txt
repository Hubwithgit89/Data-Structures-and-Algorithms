{"id":603445879,"lang":"java","time":"4 days, 8 hours","timestamp":1639808315,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/603445879/","is_pending":"Not Pending","title":"Evaluate Division","memory":"37.5 MB","code":"class Solution {\n    public double[] calcEquation(List<List<String>> equations, double[] values, List<List<String>> queries) {\n        Map<String, Map<String, Double>> graph = buildGraph(equations, values);\n        double[] result = new double[queries.size()];\n        \n        for (int i = 0; i < queries.size(); i++) {\n            result[i] = getPathWeight(queries.get(i).get(0), queries.get(i).get(1), new HashSet<>(), graph);\n        }  \n        \n        return result;\n    }\n    \n        private double getPathWeight(String start, String end, Set<String> visited, Map<String, Map<String, Double>> graph) {\n        \n        if (!graph.containsKey(start)) \n            return -1.0;\n        \n        if (graph.get(start).containsKey(end))\n            return graph.get(start).get(end);\n        \n        visited.add(start);\n        for (Map.Entry<String, Double> neighbour : graph.get(start).entrySet()) {\n            if (!visited.contains(neighbour.getKey())) {\n                double productWeight = getPathWeight(neighbour.getKey(), end, visited, graph);\n                if (productWeight != -1.0)\n                    return neighbour.getValue() * productWeight;\n            }\n        }\n        \n        return -1.0;\n    }\n    \n\n    \n    public Map<String, Map<String, Double>> buildGraph(List<List<String>> equations, double[] values){\n        Map<String, Map<String, Double>>  graph = new HashMap<>();\n        String u, v;\n        \n        for(int i = 0; i < equations.size(); i++){\n            u = equations.get(i).get(0);\n            v = equations.get(i).get(1);\n            graph.putIfAbsent(u, new HashMap<>());\n            graph.get(u).put(v, values[i]);\n            graph.putIfAbsent(v, new HashMap<>());\n            graph.get(v).put(u, 1 / values[i]);\n        }\n        \n        return graph;\n    }\n}","compare_result":"111111111111111111111111","title_slug":"evaluate-division"}