{"id":602637641,"lang":"java","time":"6 days, 5 hours","timestamp":1639645313,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/602637641/","is_pending":"Not Pending","title":"Insertion Sort List","memory":"42 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode insertionSortList(ListNode head) {\n\t\t\n\t\tListNode helper = new ListNode(0);\n\t\tListNode cur = head;\n\t\tListNode pre = helper;\n\t\tListNode next = null;\n\n        while( cur != null ){\n\t\t\tnext = cur.next;\n\t\t\t\n            while( pre.next != null && pre.next.val < cur.val ){\n\t\t\t\tpre = pre.next;\n\t\t\t}\n\n            cur.next = pre.next;\n\t\t\tpre.next = cur;\n\t\t\tpre = helper;\n\t\t\tcur = next;\n\t\t}\n\t\t\n\t\treturn helper.next;\n\n    }\n}","compare_result":"1111111111111111111","title_slug":"insertion-sort-list"}