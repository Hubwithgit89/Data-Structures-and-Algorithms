{"id":603799791,"lang":"java","time":"3 days, 12 hours","timestamp":1639881931,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/603799791/","is_pending":"Not Pending","title":"Decode String","memory":"39.7 MB","code":"class Solution {\n    public String decodeString(String s) {\n        String outputString = \"\";\n        \n        Stack<String> resultStack = new Stack<>();\n        Stack<Integer> counterStack = new Stack<>();\n        int n = s.length();\n        int i=0;\n        while(i <n){\n            \n            char currentCharacter = s.charAt(i);\n            \n            if(Character.isDigit(currentCharacter)){\n                int count =0;\n                while (Character.isDigit(s.charAt(i))) {\n                    count = 10 * count + (s.charAt(i) - '0');\n                    i++;\n                }\n                counterStack.push(count);\n            \n            }else if(currentCharacter == '['){\n            \n                resultStack.push(outputString);\n                outputString = \"\";\n                i++;\n            \n            }else if(currentCharacter == ']'){\n                StringBuilder temp = new StringBuilder (resultStack.pop());\n                int repeatTimes = counterStack.pop();\n                for (int j = 0; j < repeatTimes; j++) {\n                    temp.append(outputString);\n                }\n                outputString = temp.toString();\n                i++;\n                \n            }else{\n                outputString += s.charAt(i++);\n            }\n        }\n        \n        return outputString;\n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"decode-string"}