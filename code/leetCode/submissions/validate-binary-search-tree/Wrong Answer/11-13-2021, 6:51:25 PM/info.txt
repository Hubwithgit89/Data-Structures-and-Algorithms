{"id":586480000,"lang":"java","time":"1 month, 1 week","timestamp":1636809685,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/586480000/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    public boolean isValidBST(TreeNode root) {\n        if(root == null) return true;\n        if(root.left != null && root.left.val > root.val ) return false;\n        if(root.right != null && root.right.val < root.val ) return false;\n        if(!isValidBST(root.left) && !isValidBST(root.right)) return false;\n        return true;\n    }\n}","compare_result":"11110001111001001001111111111111111111110110110101011001001111000011111000110001","title_slug":"validate-binary-search-tree"}