{"id":590963213,"lang":"java","time":"1Â month","timestamp":1637583254,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/590963213/","is_pending":"Not Pending","title":"Group Anagrams","memory":"53.4 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        List<List<String>> groupedAnagrams = new ArrayList<>();\n        \n        HashMap<String, List<String>> map = new HashMap<>();\n        \n        for(String current: strs){\n            char[] characters = current.toCharArray();\n            Arrays.sort(characters);\n            String sorted = new String(characters);\n            \n            if(!map.containsKey(sorted)){\n            \n                map.put(sorted, new ArrayList<>());\n            }\n            map.get(sorted).add(current);\n        }\n        \n        groupedAnagrams.addAll(map.values());\n        return groupedAnagrams;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams"}