{"id":590010966,"lang":"java","time":"1Â month","timestamp":1637416813,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/590010966/","is_pending":"Not Pending","title":"3Sum","memory":"56.1 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        \n        if(nums.length == 0 ) return new ArrayList<>();\n        Arrays.sort(nums);\n        \n        List<List<Integer>> res = new ArrayList<>();\n        \n        for(int i=0 ;i< nums.length -2;i++){\n            if(i==0 || ( i >0 && nums[i] != nums[i-1] )){\n                int low = i+1;\n                int high = nums.length -1;\n                int sum = 0 - nums[i];\n                \n                while(low < high){\n                    if(nums[low] + nums[high] == sum){\n                        res.add(Arrays.asList(nums[i], nums[low], nums[high]));\n                        while(low<high && nums[low] == nums[low+1]) low++;\n                        while(low<high && nums[high] == nums[high-1]) high--;\n                        low++;\n                        high--;\n                    }else if(nums[low] + nums[high] > sum){\n                        high--;\n                    }else{\n                        low++;\n                    }\n                }\n            }\n        }\n        \n        return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum"}