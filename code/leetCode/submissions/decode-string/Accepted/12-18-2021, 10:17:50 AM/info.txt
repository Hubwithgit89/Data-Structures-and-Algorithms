{"id":603417303,"lang":"java","time":"4 days, 9 hours","timestamp":1639802870,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/603417303/","is_pending":"Not Pending","title":"Decode String","memory":"37.6 MB","code":"class Solution {\n    public String decodeString(String s) {\n        String res = \"\";\n        Stack<Integer> countStack = new Stack<>();\n        Stack<String> resStack = new Stack<>();\n        int idx = 0;\n        while (idx < s.length()) {\n            if (Character.isDigit(s.charAt(idx))) {\n                int count = 0;\n                while (Character.isDigit(s.charAt(idx))) {\n                    count = 10 * count + (s.charAt(idx) - '0');\n                    idx++;\n                }\n                countStack.push(count);\n            }\n            else if (s.charAt(idx) == '[') {\n                resStack.push(res);\n                res = \"\";\n                idx++;\n            }\n            else if (s.charAt(idx) == ']') {\n                StringBuilder temp = new StringBuilder (resStack.pop());\n                int repeatTimes = countStack.pop();\n                for (int i = 0; i < repeatTimes; i++) {\n                    temp.append(res);\n                }\n                res = temp.toString();\n                idx++;\n            }\n            else {\n                res += s.charAt(idx++);\n            }\n        }\n        return res;\n    \n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"decode-string"}