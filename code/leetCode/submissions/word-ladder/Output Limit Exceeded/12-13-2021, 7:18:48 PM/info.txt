{"id":601237803,"lang":"java","time":"1 week, 2 days","timestamp":1639403328,"status_display":"Output Limit Exceeded","runtime":"N/A","url":"/submissions/detail/601237803/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        \n        if(!wordList.contains(endWord)) return 0;\n        int result = 1;\n        int size = 0;\n        \n        Queue<String> q = new LinkedList<>();\n        Set<String> visited = new HashSet<String>();\n        visited.add(beginWord);\n        \n        Set<String> set = new HashSet<>(wordList);\n        q.add(beginWord);\n        q.add(null);\n        StringBuilder modifiedWord = new StringBuilder(beginWord);\n        \n        while(!q.isEmpty()){\n            \n            String currentWord = q.remove();\n            if(currentWord!=null){\n                while(size < beginWord.length()){\n                    for(char i='a';i<= 'z';i++){\n                        \n                        if(i != currentWord.charAt(size)){\n\n                            modifiedWord = new StringBuilder(currentWord);\n                            modifiedWord.setCharAt(size, i);\n\n                            if(modifiedWord.toString().equals(endWord)){\n                                return result+1;\n                            }\n\n                            if(set.contains(modifiedWord.toString()) && !visited.contains(modifiedWord.toString())){\n                               q.add(modifiedWord.toString());\n                                visited.add(modifiedWord.toString());\n                            }\n                        }\n                        \n                    }\n                    size++;\n                }\n            }else{\n                result++;\n                if (!q.isEmpty()) { \n                    q.add(null);\n                  }\n            }\n            size = 0;\n            System.out.println(Arrays.toString(q.toArray()));\n        }\n                \n        return 0;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"word-ladder"}