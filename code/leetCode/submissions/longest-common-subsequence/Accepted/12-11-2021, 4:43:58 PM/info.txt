{"id":600188756,"lang":"java","time":"1 week, 4 days","timestamp":1639221238,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/600188756/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"42.7 MB","code":"class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        int m = text1.length();\n        int n = text2.length();\n        \n        int lcs[][] = new int[m+1][n+1];\n        \n        for(int i=0;i<m+1;i++){\n            for(int j=0;j<n+1;j++){\n                if(i==0 || j==0){\n                    lcs[i][j] = 0;\n                }\n            }\n        }\n        \n        for(int i=1;i<m+1;i++){\n            for(int j=1;j<n+1;j++){\n                if(text1.charAt(i-1)==text2.charAt(j-1)){\n                    lcs[i][j] = 1 + lcs[i-1][j-1];\n                }else{\n                    lcs[i][j] = Math.max(lcs[i-1][j], lcs[i][j-1]);\n                }\n            }\n        }\n        \n        return lcs[m][n];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence"}