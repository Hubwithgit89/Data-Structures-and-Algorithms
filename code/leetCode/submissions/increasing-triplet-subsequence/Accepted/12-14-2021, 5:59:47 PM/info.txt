{"id":601719391,"lang":"java","time":"1 week, 1 day","timestamp":1639484987,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/601719391/","is_pending":"Not Pending","title":"Increasing Triplet Subsequence","memory":"80.2 MB","code":"class Solution {\n    public boolean increasingTriplet(int[] nums) {\n        int n = nums.length;\n        int[] smallest = new int[n];\n        int[] highest = new int[n];\n        \n        smallest[0] = Integer.MAX_VALUE;\n        \n        for(int i=1;i<n;i++){\n            smallest[i] = Math.min(smallest[i-1], nums[i-1]);\n        }\n        \n        highest[n-1] = Integer.MIN_VALUE;\n        for(int i = n-2;i>0;i--){\n            highest[i] = Math.max(highest[i+1], nums[i+1]);\n        }\n        \n        for(int i=1;i<n-1;i++){\n            if(smallest[i] < nums[i] && highest[i] > nums[i]){\n                return true;\n            }\n        }\n        return false;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"increasing-triplet-subsequence"}