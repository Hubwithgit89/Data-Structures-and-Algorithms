{"id":598912316,"lang":"java","time":"1 week, 6 days","timestamp":1638979680,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/598912316/","is_pending":"Not Pending","title":"Target Sum","memory":"N/A","code":"class Solution {\n    public int findTargetSumWays(int[] nums, int target) {\n        int n = nums.length;\n        int sum = Arrays.stream(nums).sum();\n        \n        int[][] dp = new int[n+1][sum+1];\n        \n        for(int i=0;i<n+1;i++){\n            for(int j=0;j<sum+1;j++){\n                if(i == 0) dp[i][j] = 0;\n                if(j == 0) dp[i][j] = 1;\n            }\n        }\n        \n        for(int i=1;i< n+1;i++){\n            for(int j=1;j< sum+1;j++){\n                if(nums[i-1] <= j){\n                    dp[i][j] = dp[i-1][j-nums[i-1]] + dp[i-1][j];\n                }else{\n                    dp[i][j] = dp[i-1][j];\n                }\n            }\n        }\n        int diff = (target + sum) / 2;\n        return sum < target ? 0 : dp[n][diff];\n    }\n}","compare_result":"1111110100001001111001011110110001100011111111110110111111111011111111111111011111111111011111011110111101111101110000010111111100000000000","title_slug":"target-sum"}