{"id":586139254,"lang":"java","time":"1 month, 1 week","timestamp":1636741200,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/586139254/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"41 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if (root == null || root == p || root == q) return root;\n    TreeNode left = lowestCommonAncestor(root.left, p, q);\n    TreeNode right = lowestCommonAncestor(root.right, p, q);\n    return left == null ? right : right == null ? left : root;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree"}