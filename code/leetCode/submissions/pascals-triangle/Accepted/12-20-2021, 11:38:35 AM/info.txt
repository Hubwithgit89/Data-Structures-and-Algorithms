{"id":604337061,"lang":"java","time":"2 days, 8 hours","timestamp":1639980515,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/604337061/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"36.8 MB","code":"class Solution {\n    public List<List<Integer>> generate(int n) {\n        List<List<Integer>> pascal = new ArrayList<>();\n        \n        if(n >= 1) pascal.add(Arrays.asList(1));\n        if(n >= 2) {\n            pascal.add(Arrays.asList(1,1));\n        }\n        for(int i=2;i<n;i++){\n            List<Integer> currentRow = new ArrayList<>();\n            for(int j=0;j<=i;j++){\n                if(j ==0){\n                    currentRow.add(1);\n                }else if(j == i){\n                    currentRow.add(1);\n                }else{\n                    int first = pascal.get(i-1).get(j-1);\n                    int second = pascal.get(i-1).get(j);\n                    currentRow.add( first + second);\n                }\n            }\n            pascal.add(currentRow);\n        }\n        \n        return pascal;\n    }\n}","compare_result":"11111111111111","title_slug":"pascals-triangle"}