{"id":586482701,"lang":"java","time":"1 month, 1 week","timestamp":1636810284,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/586482701/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    private int prev = Integer.MIN_VALUE;\n    \n    public boolean isValidBST(TreeNode root) {\n        return isBST(root);\n    }\n    \n    public boolean isBST(TreeNode root){\n        if(root == null){ return true; }\n        if(!isBST(root.left)){ return false; }\n        if(root.val <= prev){ return false; }\n        prev = root.val;\n        return isBST(root.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111110111101010111001110","title_slug":"validate-binary-search-tree"}