{"id":600251149,"lang":"java","time":"1 week, 3 days","timestamp":1639234325,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/600251149/","is_pending":"Not Pending","title":"Coin Change","memory":"54.2 MB","code":"class Solution {\n    public int coinChange(int[] coins, int amount) {\n        int n = coins.length;\n        \n        int[][] dp = new int[n+1][amount+1];\n        \n        for(int i=0;i<n+1;i++){\n            for(int j=0;j<amount+1;j++){\n                if(i==0) dp[i][j] = Integer.MAX_VALUE-1;\n            }\n        }\n        dp[0][0] =0;\n    \n        for(int j=1;j<amount+1;j++){\n            if(j % coins[0] ==0){\n                dp[1][j] = j / coins[0];\n            }else{\n                dp[1][j] = Integer.MAX_VALUE-1;\n            }\n        }\n        \n        for(int i=2;i< n+1;i++){\n            for(int j=1;j< amount+1;j++){\n                if(coins[i-1] <= j){\n                    dp[i][j] = Math.min(1+dp[i][j-coins[i-1]], dp[i-1][j]);\n                }else{\n                    dp[i][j] = dp[i-1][j];\n                }\n            }\n        }\n        return dp[n][amount] == Integer.MAX_VALUE-1 ? -1 : dp[n][amount];\n    }\n    \n   \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change"}