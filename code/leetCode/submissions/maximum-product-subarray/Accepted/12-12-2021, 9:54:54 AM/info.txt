{"id":600556881,"lang":"java","time":"1 week, 3 days","timestamp":1639283094,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/600556881/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"41.7 MB","code":"class Solution {\n    public int maxProduct(int[] nums) {\n        int maxProduct =Integer.MIN_VALUE;\n        int product = 1;\n        \n        \n        for(int i=0;i<nums.length;i++){\n            product = product * nums[i];\n            maxProduct = Math.max(maxProduct,product);\n            if(product == 0) product= 1;\n        }\n        \n        product =1;\n        \n        for(int i=nums.length-1;i>=0;i--){\n            product = product * nums[i];\n            maxProduct = Math.max(maxProduct,product);\n            if(product == 0) product= 1;\n        }\n        \n        return maxProduct;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray"}