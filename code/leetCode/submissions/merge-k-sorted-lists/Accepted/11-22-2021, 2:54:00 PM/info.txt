{"id":590921139,"lang":"java","time":"1Â month","timestamp":1637573040,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/590921139/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"44.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        PriorityQueue<Integer> minHeap = new PriorityQueue<>();\n        \n        for(ListNode head: lists){\n            while(head!=null){\n                minHeap.add(head.val);\n                head = head.next;\n            }\n        }\n        \n        ListNode dummy = new ListNode(-1);\n        ListNode head = dummy;\n        \n        while(!minHeap.isEmpty()){\n            head.next = new ListNode(minHeap.remove());\n            head = head.next; \n        }\n        \n        return dummy.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}