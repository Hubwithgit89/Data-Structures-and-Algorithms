{"id":605255815,"lang":"java","time":"13 hours, 25 minutes","timestamp":1640136061,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/605255815/","is_pending":"Not Pending","title":"Reorder List","memory":"41.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public void reorderList(ListNode head) {\n        if(head ==null || head.next == null) return;\n        \n        ListNode slow = head;\n        ListNode fast = head;\n        \n        while(fast.next !=null && fast.next.next !=null){\n            slow = slow.next;\n            fast = fast.next.next;\n        }\n        \n        ListNode prevMiddle = slow;\n        ListNode prevCurrent = slow.next;\n        \n        while(prevCurrent.next != null){\n            ListNode current = prevCurrent.next;\n            prevCurrent.next = current.next;\n            current.next = prevMiddle.next;\n            prevMiddle.next = current;\n        }\n        \n        slow = head;\n        fast = prevMiddle.next;\n        \n        while(slow != prevMiddle){\n            prevMiddle.next=fast.next;\n            fast.next=slow.next;\n            slow.next=fast;\n            slow=fast.next;\n            fast=prevMiddle.next;\n        }\n    }\n}","compare_result":"111111111111","title_slug":"reorder-list"}