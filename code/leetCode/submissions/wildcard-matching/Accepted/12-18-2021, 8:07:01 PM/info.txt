{"id":603573153,"lang":"java","time":"4Â days","timestamp":1639838221,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/603573153/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"45.3 MB","code":"class Solution {\n    public boolean isMatch(String s, String p) {\n        char[] pattern = p.toCharArray();\n        char[] str = s.toCharArray();\n        \n        int writeIndex =0;\n        boolean isFirst = true;\n        int n = pattern.length;\n        for(int i=0;i<n;i++){\n            if(pattern[i] == '*'){\n                if(isFirst){\n                    pattern[writeIndex++] = pattern[i];\n                    isFirst = false;\n                }\n            }else{\n                pattern[writeIndex++] = pattern[i];\n                isFirst = true;\n            }\n        }\n        \n        boolean dp[][] = new boolean[str.length+1][writeIndex + 1];\n        \n        if(writeIndex >0 && pattern[0] == '*'){\n            dp[0][1] = true;\n        }\n        \n        dp[0][0] = true;\n        \n        for(int i=1;i<str.length+1;i++){\n            for(int j=1;j<writeIndex +1;j++){\n                if(str[i-1] == pattern[j-1] || pattern[j-1] == '?'){\n                    dp[i][j] = dp[i-1][j-1];\n                }else if(pattern[j-1] == '*'){\n                    dp[i][j] = dp[i-1][j] || dp[i][j-1];\n                } \n            }\n        }\n        \n        return dp[str.length][writeIndex];\n    }\n}","compare_resulttitle_slug":"wildcard-matching"}