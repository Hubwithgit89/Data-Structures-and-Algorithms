{"id":568283687,"lang":"java","time":"2Â months, 2Â weeks","timestamp":1633782284,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/568283687/","is_pending":"Not Pending","title":"Binary Search","memory":"N/A","code":"class Solution {\n    \n    public int binarySearch(int l, int r, int[] nums, int target){\n        \n        if( l == r && l !=0 ){\n            return -1;\n        }\n        int m =  (l + r) / 2;\n\n        if(nums[m] == target){\n            return m;\n        }\n        if(nums[m] > target){\n            return binarySearch(l, m, nums, target);\n        }else{\n            return binarySearch(m+1, r, nums, target);\n        }\n        \n    }\n    \n    public int search(int[] nums, int target) {\n        int leftIndex = 0;\n        int rightIndex = nums.length-1;\n        return binarySearch(leftIndex, rightIndex, nums, target);\n    }\n}","compare_result":"11100000000000000000000000000000000000000000000","title_slug":"binary-search"}