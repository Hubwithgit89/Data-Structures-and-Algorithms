{"id":590031910,"lang":"java","time":"1Â month","timestamp":1637420788,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/590031910/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"38.2 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n        ListNode res = new ListNode(-1), temp = res;\n        \n        while (l1 != null && l2 !=null){\n            if(l1.val < l2.val){\n                res.next = new ListNode(l1.val);\n                l1 = l1.next;\n            }else{\n                res.next = new ListNode(l2.val);\n                l2 = l2.next;\n            }\n            res = res.next;\n        }\n        \n        while(l1 != null){\n            res.next = new ListNode(l1.val);\n            l1 = l1.next;\n            res = res.next;\n        }\n        while(l2 != null){\n            res.next = new ListNode(l2.val);\n            l2 = l2.next;\n            res = res.next;\n        }\n        \n        return temp.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}