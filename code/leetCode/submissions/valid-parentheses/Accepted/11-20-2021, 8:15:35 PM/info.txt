{"id":590025423,"lang":"java","time":"1Â month","timestamp":1637419535,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/590025423/","is_pending":"Not Pending","title":"Valid Parentheses","memory":"39.4 MB","code":"class Solution {\n    public boolean isValid(String s) {\n        Stack<String> stack = new Stack<>();\n\n        for (int i = 0; i < s.length(); i++) {\n            String current = String.valueOf(s.charAt(i));\n\n            if (current.equals(\"[\") || current.equals(\"{\") || current.equals(\"(\")) {\n                stack.push(current);\n            } else {\n                if(!stack.isEmpty()) {\n                    String top = stack.pop();\n                    if (current.equals(\"}\")) {\n                        if (!top.equals(\"{\")) return false;\n                    } else if (current.equals(\"]\")) {\n                        if (!top.equals(\"[\")) return false;\n                    } else if (current.equals(\")\")) {\n                        if (!top.equals(\"(\")) return false;\n                    }\n                }else{\n                    return false;\n                }\n            }\n\n        }\n        return stack.isEmpty();\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-parentheses"}