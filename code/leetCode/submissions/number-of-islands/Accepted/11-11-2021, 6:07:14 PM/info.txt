{"id":585515482,"lang":"java","time":"1 month, 1 week","timestamp":1636634234,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/585515482/","is_pending":"Not Pending","title":"Number of Islands","memory":"47.3 MB","code":"class Solution {\n    \n    public void markIsland(char[][] grid, int i, int j, int m, int n) {\n       if (i < 0 || i >= m || j < 0 || j >= n || grid[i][j] != '1') return;\n\n        grid[i][j] = '2';\n\n        markIsland(grid, i - 1, j, m, n);\n        markIsland(grid, i, j - 1, m, n);\n        markIsland(grid, i + 1, j, m, n);\n        markIsland(grid, i, j + 1, m, n);\n    }\n\n    public int numIslands(char[][] grid) {\n        int numberOfIslands = 0;\n        int m = grid.length;\n        int n = grid[0].length;\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (grid[i][j] == '1') {\n                    markIsland(grid, i, j, m, n);\n                    numberOfIslands++;\n                }\n            }\n        }\n        return numberOfIslands;\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}